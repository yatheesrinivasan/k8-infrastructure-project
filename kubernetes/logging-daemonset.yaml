# Custom DaemonSet for comprehensive node monitoring
# Runs Filebeat + node-exporter on every cluster node
# Created by Yathee for centralized logging and metrics collection
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: logging-daemon
  namespace: kube-system
  labels:
    app: logging-daemon
    k8s-app: logging-daemon
    version: "1.0"  # Personal versioning for this deployment
spec:
  selector:
    matchLabels:
      app: logging-daemon
  template:
    metadata:
      labels:
        app: logging-daemon
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: logging-daemon
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      # Tolerations to run on all nodes including masters
      # Note: both master and control-plane keys needed for compatibility
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      - key: node-role.kubernetes.io/control-plane
        effect: NoSchedule
      - operator: Exists
        effect: NoExecute
      - operator: Exists
        effect: NoSchedule
      containers:
      - name: filebeat
        image: docker.elastic.co/beats/filebeat:8.11.0
        args:
        - -c
        - /etc/filebeat.yml
        - -e
        securityContext:
          runAsUser: 0
          runAsGroup: 0
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
            add:
            - DAC_OVERRIDE
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          limits:
            memory: 200Mi
            cpu: 100m
          requests:
            memory: 100Mi
            cpu: 50m
        volumeMounts:
        - name: config
          mountPath: /etc/filebeat.yml
          readOnly: true
          subPath: filebeat.yml
        - name: data
          mountPath: /usr/share/filebeat/data
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: varlog
          mountPath: /var/log
          readOnly: true
        - name: vartmp
          mountPath: /var/tmp
        livenessProbe:
          httpGet:
            path: /
            port: 5066
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 5066
          initialDelaySeconds: 10
          periodSeconds: 5
      - name: node-exporter
        image: prom/node-exporter:v1.6.1
        args:
        - --path.sysfs=/host/sys
        - --path.rootfs=/host/root
        - --no-collector.wifi
        - --no-collector.hwmon
        - --collector.filesystem.mount-points-exclude=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/pods/.+)($|/)
        - --collector.netclass.ignored-devices=^(veth.*|[a-f0-9]{15})$
        - --collector.netdev.device-exclude=^(veth.*|[a-f0-9]{15})$
        securityContext:
          runAsUser: 65534
          runAsGroup: 65534
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        ports:
        - containerPort: 9100
          name: metrics
          protocol: TCP
        resources:
          limits:
            memory: 180Mi
            cpu: 100m
          requests:
            memory: 100Mi
            cpu: 50m
        volumeMounts:
        - mountPath: /host/sys
          mountPropagation: HostToContainer
          name: sys
          readOnly: true
        - mountPath: /host/root
          mountPropagation: HostToContainer
          name: root
          readOnly: true
        livenessProbe:
          httpGet:
            path: /
            port: 9100
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 9100
          initialDelaySeconds: 10
          periodSeconds: 5
      terminationGracePeriodSeconds: 30
      volumes:
      - name: config
        configMap:
          defaultMode: 0640
          name: logging-daemon-config
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: varlog
        hostPath:
          path: /var/log
      - name: data
        hostPath:
          path: /var/lib/filebeat-data
          type: DirectoryOrCreate
      - name: vartmp
        emptyDir: {}
      - hostPath:
          path: /sys
        name: sys
      - hostPath:
          path: /
        name: root

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: logging-daemon
  namespace: kube-system
  labels:
    app: logging-daemon

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: logging-daemon
  labels:
    app: logging-daemon
rules:
- apiGroups: [""]
  resources:
  - nodes
  - namespaces
  - pods
  - services
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources:
  - replicasets
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: logging-daemon
  labels:
    app: logging-daemon
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: logging-daemon
subjects:
- kind: ServiceAccount
  name: logging-daemon
  namespace: kube-system

---
apiVersion: v1
kind: Service
metadata:
  name: logging-daemon-metrics
  namespace: kube-system
  labels:
    app: logging-daemon
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9100"
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app: logging-daemon
  ports:
  - name: metrics
    port: 9100
    targetPort: 9100
    protocol: TCP

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: logging-daemon-config
  namespace: kube-system
  labels:
    app: logging-daemon
data:
  filebeat.yml: |-
    filebeat.inputs:
    - type: container
      paths:
        - /var/log/containers/*.log
      processors:
        - add_kubernetes_metadata:
            host: ${NODE_NAME}
            matchers:
            - logs_path:
                logs_path: "/var/log/containers/"
        - drop_fields:
            fields: ["host"]
    
    - type: log
      paths:
        - /var/log/secure
        - /var/log/messages
        - /var/log/syslog
      fields:
        log_type: system
      fields_under_root: true
    
    output.console:
      enabled: true
      pretty: true
    
    logging.level: info
    logging.to_files: true
    logging.files:
      path: /var/tmp
      name: filebeat
      keepfiles: 7
      permissions: 0644
    
    http.enabled: true
    http.port: 5066
    
    monitoring:
      enabled: true